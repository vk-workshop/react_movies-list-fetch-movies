{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","moviesList","map","imdbId","FindMovie","setMoviesList","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","movies","setMovies","findMovie","e","preventDefault","trim","fetch","concat","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","finally","useEffect","_Fragment","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","length","some","m","prevMovie","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e2668e5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div\n    className=\"card\"\n    data-cy=\"movieCard\"\n  >\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  moviesList: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ moviesList }) => (\n  <div className=\"movies\">\n    {moviesList.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  setMoviesList: React.Dispatch<React.SetStateAction<Movie[]>>;\n  moviesList: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  setMoviesList,\n  moviesList,\n}) => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const defImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const findMovie = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    if (query.trim() !== '') {\n      setIsLoading(true);\n\n      getMovie(query)\n        .then((data) => {\n          setIsLoading(false);\n\n          if ('Error' in data) {\n            setError(true);\n          } else {\n            const movie: Movie = {\n              title: data.Title,\n              description: data.Plot,\n              imgUrl: data.Poster !== 'N/A' ? data.Poster : defImg,\n              imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n              imdbId: data.imdbID,\n            };\n\n            setMovies([movie]);\n          }\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  };\n\n  useEffect(() => {\n    setError(false);\n  }, [query]);\n\n  const addToMovieList = () => {\n    const id = movies[0].imdbId;\n    const isExist = moviesList.some(m => m.imdbId === id);\n\n    if (isExist) {\n      setMovies([]);\n      setQuery('');\n\n      return;\n    }\n\n    setMoviesList(prevMovie => [...prevMovie, ...movies]);\n    setQuery('');\n    setMovies([]);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': error })}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={cn('button is-light',\n                { 'is-loading': isLoading })}\n              onClick={(e) => findMovie(e)}\n            >\n              {movies.length > 0 ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movies.length > 0 && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addToMovieList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movies.length > 0 && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          {movies.map(movie => (\n            <MovieCard movie={movie} key={movie.imdbId} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=27f6b1c1';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [moviesList, setMoviesList] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {moviesList.length > 0 && (\n          <MoviesList moviesList={moviesList} />\n        )}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMoviesList={setMoviesList}\n          moviesList={moviesList}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}